{"version":3,"sources":["assets/images/profile1.jpg","components/Timeline/Timeline.js","utils/resumeData.js","components/Button/Button.js","components/Profile/Profile.js","components/Header/Header.js","pages/Resume/Resume.js","pages/Portfolio/Portfolio.js","components/Footer/Footer.js","App.js","reportWebVitals.js","index.js"],"names":["CustomTimelineSeparator","TimelineSeparator","className","TimelineDot","variant","TimelineConnector","CustomTimeline","title","icon","children","Timeline","TimelineItem","TimelineContent","Typography","name","birthday","job","email","address","phone","socials","Facebook","link","text","Linkedin","Github","CustomButton","Button","endIcon","CustomTimelineItem","href","target","Profile","resumeData","src","profile_pic","alt","Object","keys","map","key","Header","Resume","Portfolio","Footer","App","Container","Grid","container","spacing","item","xs","sm","md","lg","style","backgroundColor","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6e4f39ed.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/profile1.92ff913b.jpg\";","import React from \"react\";\r\nimport Timeline from \"@material-ui/lab/Timeline\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport TimelineSeparator from \"@material-ui/lab/TimelineSeparator\";\r\nimport TimelineConnector from \"@material-ui/lab/TimelineConnector\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport TimelineDot from \"@material-ui/lab/TimelineDot\";\r\nimport \"./Timeline.css\";\r\nimport { Typography } from \"@material-ui/core\";\r\nimport WorkIcon from \"@material-ui/icons/Work\";\r\n\r\nconst CustomTimeline = ({ title, icon, children }) => {\r\n  return (\r\n    <Timeline className={\"timeline\"}>\r\n      {/* Item Header */}\r\n      <TimelineItem className={\"timeline_firstItem\"}>\r\n        <TimelineSeparator>\r\n          <TimelineDot className={\"timeline_dot_header\"}>{icon}</TimelineDot>\r\n          <TimelineConnector />\r\n        </TimelineSeparator>\r\n        <TimelineContent>\r\n          <Typography variant=\"h6\" className={\"timeline_header\"}>\r\n            {title}\r\n          </Typography>\r\n        </TimelineContent>\r\n      </TimelineItem>\r\n      {children}\r\n    </Timeline>\r\n  );\r\n};\r\n\r\nexport const CustomTimelineSeparator = () => (\r\n  <TimelineSeparator className={\"separator_padding\"}>\r\n    <TimelineDot variant={\"outlined\"} className={\"timeline_dot\"} />\r\n    <TimelineConnector />\r\n  </TimelineSeparator>\r\n);\r\n\r\nexport default CustomTimeline;\r\n","import React from \"react\";\r\nimport FacebookIcon from '@material-ui/icons/Facebook';\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn';\r\nimport GitHubIcon from '@material-ui/icons/GitHub';\r\n\r\nexport default {\r\n    name        :   'Md. Imrul Hasan',\r\n    title       :   'Data Analyst',\r\n    birthday    :   '30th Aug, 1997',\r\n    job         :   'Engineer',\r\n    email       :   'imrulhasan273@gmail.com',\r\n    address     :   'Savar, Dhaka',\r\n    phone       :   '01775707460',\r\n    socials     :    {\r\n        Facebook    :   {\r\n                link : 'https://www.facebook.com/backstreetimrul/',\r\n                text : 'Imrul Hasan',\r\n                icon : <FacebookIcon/>,\r\n        },\r\n        Linkedin    :   {\r\n                link : 'https://www.linkedin.com/in/imrulhasan273/',\r\n                text : 'Imrul Hasan',\r\n                icon : <LinkedInIcon/>,\r\n        },\r\n        Github    :   {\r\n                link : 'https://www.github.com/imrulhasan273',\r\n                text : 'Imrul Hasan',\r\n                icon : <GitHubIcon/>,\r\n        },    \r\n    }\r\n}","import React from 'react'\r\nimport { Button } from '@material-ui/core'\r\n\r\nimport './Button.css'\r\n\r\nconst CustomButton = ({text, icon}) => {\r\n    return (\r\n        <Button className='custom_btn' endIcon={icon ? (<div className='btn_icon_container'>{icon}</div>) : null}>\r\n            <span className='btn_txt'>{text}</span>\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default CustomButton\r\n","// rafce\r\nimport { Typography } from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport \"./Profile.css\";\r\nimport profile_pic from \"../../assets/images/profile1.jpg\";\r\nimport CustomTimeline, { CustomTimelineSeparator } from \"../Timeline/Timeline\";\r\nimport PersonOutLineOutlinedIcon from \"@material-ui/icons/PersonOutlineOutlined\";\r\nimport TimelineItem from \"@material-ui/lab/TimelineItem\";\r\nimport resumeData from \"../../utils/resumeData\";\r\nimport TimelineContent from \"@material-ui/lab/TimelineContent\";\r\nimport CustomButton from '../Button/Button'\r\nimport GetAppIcons from \"@material-ui/icons/GetApp\";\r\n\r\nconst CustomTimelineItem = ({ title, text, link }) => (\r\n  <TimelineItem>\r\n    <CustomTimelineSeparator />\r\n    <TimelineContent className=\"timeline_content\">\r\n      {link ? (\r\n        <Typography className=\"timelineItem_text\">\r\n          <span>{title}:</span>{\" \"}\r\n          <a href={link} target=\"_blank\">\r\n            {text}\r\n          </a>\r\n        </Typography>\r\n      ) : (\r\n        <Typography className=\"timelineItem_text\">\r\n          <span>{title}:</span>\r\n          {text}\r\n        </Typography>\r\n      )}\r\n    </TimelineContent>\r\n  </TimelineItem>\r\n);\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <div className=\"profile container_shadow\">\r\n      <div className=\"profile_name\">\r\n        <Typography className=\"name\">{resumeData.name}</Typography>\r\n        <Typography className=\"title\">{resumeData.title}</Typography>\r\n      </div>\r\n      <figure className=\"profile_image\">\r\n        <img src={profile_pic} alt=\"Not Found\" />\r\n      </figure>\r\n      <div className=\"profile_information\">\r\n        <CustomTimeline icon={<PersonOutLineOutlinedIcon />}>\r\n          <CustomTimelineItem title=\"Name\" text={resumeData.name} />\r\n          <CustomTimelineItem title=\"Title\" text={resumeData.title} />\r\n          <CustomTimelineItem title=\"Email\" text={resumeData.email} />\r\n          {Object.keys(resumeData.socials).map((key) => (\r\n            <CustomTimelineItem\r\n              title={key}\r\n              text={resumeData.socials[key].text}\r\n              link={resumeData.socials[key].link}\r\n            />\r\n          ))}\r\n        </CustomTimeline>\r\n\r\n        <div className='button_container'>\r\n          <CustomButton text={'Download CV'} icon={<GetAppIcons/>}/>  \r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react'\r\n\r\nconst Header = () => {\r\n    return (\r\n        <div>\r\n            This is a Header Compoennt\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\n\r\nconst Resume = () => {\r\n    return (\r\n        <div>\r\n            This is Resume Component\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Resume\r\n","import React from 'react'\r\n\r\nexport const Portfolio = () => {\r\n    return (\r\n        <div>\r\n            This is Portfolio Component\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\n\r\nexport const Footer = () => {\r\n    return (\r\n        <div>\r\n            This is a Footer Component\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport { Container, Grid } from \"@material-ui/core\";\nimport Profile from \"./components/Profile/Profile\";\nimport Header from \"./components/Header/Header\";\nimport Resume from \"./pages/Resume/Resume\";\nimport { Portfolio } from \"./pages/Portfolio/Portfolio\";\nimport { Footer } from \"./components/Footer/Footer\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <Container className={'top_60'}>\n      <Grid container spacing={7}>\n        <Grid item xs={12} sm={12} md={4} lg={3}>\n          <Profile />\n        </Grid>\n        <Grid item xs style={{ backgroundColor: \"lightgrey\" }}>\n          <Header />\n          <Router>\n            <Switch>\n              <Route path=\"/portfolio\">\n                <Portfolio />\n              </Route>\n              <Route path=\"/\">\n                <Resume />\n              </Route>\n            </Switch>\n          </Router>\n          <Footer />\n        </Grid>\n      </Grid>\n    </Container>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App /> \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}